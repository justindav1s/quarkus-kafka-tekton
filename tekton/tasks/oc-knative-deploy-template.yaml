apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: deploy-knative-template
spec:
  workspaces:
  - name: source
  - name: truststore
  - name: application-properties  
  params:
    - name: APP_NAME
      type: string
    - name: APP_DIR
      type: string  
    - name: HTTP_CONTEXT
      type: string  
    - name: DEPLOY_PROJECT
      type: string     
    - name: IMAGE_REPO
      type: string
    - name: IMAGE_NAME
      type: string
    - name: IMAGE_TAG
      type: string
    - name: PROFILE
      type: string
    - name: VERSION_LABEL
      type: string
    - name: SERVICEACCOUNT_NAME
      type: string
    - name: CONTAINER_WORKING_DIR
      type: string        
  steps:
    - name: apply
      image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
      workingDir: $(workspaces.source.path)/$(params.APP_DIR)
      command: ["/bin/bash", "-c"]
      args:
        - |-
          echo -----------CLEANUP------------------------
          oc delete sa,deployment,service,route,configmap,secret,kservice -l app=$(params.APP_NAME) -n $(params.DEPLOY_PROJECT)
          echo -----------INPUTS------------------------
          echo APP_NAME: $(params.APP_NAME)
          echo APP_DIR: $(params.APP_DIR)
          echo HTTP_CONTEXT: $(params.HTTP_CONTEXT)
          echo DEPLOY_PROJECT: $(params.DEPLOY_PROJECT)
          echo IMAGE_REPO: $(params.IMAGE_REPO)
          echo IMAGE_NAME: $(params.IMAGE_NAME)
          echo IMAGE_TAG: $(params.IMAGE_TAG)
          echo PROFILE: $(params.PROFILE)
          echo VERSION_LABEL: $(params.APP_NAME)
          echo SERVICEACCOUNT_NAME: $(params.APP_NAME)
          echo CONTAINER_WORKING_DIR:  $(params.CONTAINER_WORKING_DIR)
          echo -----------DEPLOY------------------------

          oc secrets link $(params.SERVICEACCOUNT_NAME) quay-dockercfg --for=pull -n $(params.DEPLOY_PROJECT) 
        
          oc create secret generic $(params.APP_NAME)-$(params.PROFILE)-application-properties \
              --from-file=$(workspaces.application-properties.path)/application.properties \
              -n $(params.DEPLOY_PROJECT)

          oc create secret generic $(params.APP_NAME)-$(params.PROFILE)-kafka-truststore \
              --from-file=$(workspaces.truststore.path)/kafka-truststore.jks \
              -n $(params.DEPLOY_PROJECT)

          oc label secret $(params.APP_NAME)-$(params.PROFILE)-application-properties app=$(params.APP_NAME) -n $(params.DEPLOY_PROJECT)
          oc label secret $(params.APP_NAME)-$(params.PROFILE)-kafka-truststore app=$(params.APP_NAME) -n $(params.DEPLOY_PROJECT)

          oc process -f ocp-templates/knative-serving-template.yaml \
            -p APP_NAME=$(params.APP_NAME) \
            -p CONTEXT=$(params.HTTP_CONTEXT) \
            -p IMAGE_REPO=$(params.IMAGE_REPO) \
            -p IMAGE_NAME=$(params.IMAGE_NAME) \
            -p IMAGE_TAG=$(params.IMAGE_TAG) \
            -p PROFILE=$(params.PROFILE) \
            -p VERSION_LABEL=$(params.VERSION_LABEL) \
            -p SERVICEACCOUNT_NAME=$(params.SERVICEACCOUNT_NAME) \
            -p CONTAINER_WORKING_DIR=$(params.CONTAINER_WORKING_DIR) \
            -n $(params.DEPLOY_PROJECT) \
            | oc create -f -
          echo -------------DONE-------------------